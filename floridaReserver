// ==UserScript==
// @name         Florida State Reserver
// @namespace    http://tampermonkey.net/
// @version      0.1
// @description  try to take over the world!
// @author       You
// @match        https://www.reserve.floridastateparks.org/Web/
// @icon         https://www.google.com/s2/favicons?sz=64&domain=floridastateparks.org
// @grant        none
// @require      https://code.jquery.com/jquery-3.6.0.min.js
// ==/UserScript==

/**
== Requirements ==
Here's a link to a camping reservation page for the Florida State parks:
https://www.reserve.floridastateparks.org/Web/#!park/58/159

After going to the page, you'll probably have to select a 'starting date' and 'end date' to get the the page to show some open campsites.
 I used  Apr 2, 2023 - Apr 3, 2023 and selected Loop B (from pull down).

The steps are #1 to Refresh the page; if a campsite isn't already available, this can update the page to show it available.
 
Then #2 would be to select a campsite.  After clicking the site, then the next screen appears:
with the 'Book Now' button
**/

(function() {
    'use strict';

    waitForElm('#site-3233-3 > div').then((elm) => {
        $('#site-3233-3 > div').css('background-color', 'red');
        $('#site-3233-3 > div').click();

        // Wait for 500ms then try to click the "book now" button 
        // TODO: play around with this.  Ideally we could 'waitForElm' for this button
        // but I couldn't get it to work.  Lowest effort would be to tune the time (does 250ms work?)
        setTimeout(function() {
            if($('#checkout-button').length) {
                $('#checkout-button').css('color', 'red');
                $('#checkout-button').click();
            }
        }, 500);


    });
})();

// https://stackoverflow.com/questions/5525071/how-to-wait-until-an-element-exists
function waitForElm(selector) {
    return new Promise(resolve => {
        if (document.querySelector(selector)) {
            return resolve(document.querySelector(selector));
        }

        const observer = new MutationObserver(mutations => {
            if (document.querySelector(selector)) {
                resolve(document.querySelector(selector));
                observer.disconnect();
            }
        });

        observer.observe(document.body, {
            childList: true,
            subtree: true
        });
    });
}
